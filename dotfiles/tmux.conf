# cat << EOF > /dev/null

# -- general

# buffer缓存复制到Linux系统粘贴板
# bind C-c run " tmux save-buffer - | /mnt/c/Windows/System32/clip.exe"  

set -g default-command /bin/zsh
set -g default-shell /bin/zsh

setw -g xterm-keys on
set -s escape-time 0
set -sg repeat-time 300
set -s focus-events on
set -g mouse on
set -sg exit-empty on

set -q -g status-utf8 on
setw -q -g utf8 on

set -g visual-activity off
setw -g monitor-activity off
setw -g monitor-bell off

set -g history-limit 10000

# set-option -g status-keys vi                      # 操作状态栏时的默认键盘布局；可以设置为vi或emacs
set-window-option -g mode-keys vi    # 复制模式中的默认键盘布局；可以设置为vi或emacs
set -g status-keys vi
set -g mode-keys vi
# setw -g mode-keys vi    # 复制模式中的默认键盘布局；可以设置为vi或emacs

# set-hook -g pane-focus-in "run -b 'bash ~/.config/tmux/fzf_panes.tmux update_mru_pane_ids'"
# bind -n M-w run -b 'bash ~/.config/tmux/fzf_panes.tmux new_window'

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# set -ga update-environment '\
# DISPLAY DBUS_SESSION_BUS_ADDRESS \
# QT_IM_MODULE QT_QPA_PLATFORMTHEME \
# SESSION_MANAGER \
# XDG_CONFIG_HOME XDG_CACHE_HOME XDG_DATA_HOME\
# XDG_MENU_PREFIX XDG_RUNTIME_DIR XDG_SESSION_CLASS \
# XDG_SESSION_DESKTOP XDG_SESSION_TYPE XDG_CURRENT_DESKTOP \
# XMODIFIERS \
# FZF_DEFAULT_OPTS \
# '
# set-hook -g client-attached 'run -b "cut -c3- ~/.tmux.conf | sh -s update_env_event"'
#
# -- prefix
unbind C-b
set -g prefix 'C-s'

# -- display
set -g base-index 1
setw -g pane-base-index 1

setw -g automatic-rename on
set -g renumber-windows on

set -g set-titles on

set -g display-panes-time 2000
set -g display-time 2000

set -g status-interval 1


# fix a warning while running "checkhealth" in neovim
# https://github.com/alacritty/alacritty/issues/109
# TODO: add "export $TERM = tmux-256color" macos only
# set-option default-terminal "tmux-256color"

# only this line might not be enough
# set -g default-terminal "alacritty"

# screen-256color true color
set -g default-terminal "screen-256color"

# Needs this line also to overrides the default color
set-option -ga terminal-overrides ",alacritty:Tc"
# set-option -ga terminal-overrides ',screen-256color:Tc'
# >>>>>>>>>>>> Tokyonight colorscheme of neovim configuration <<<<<<<<<<<
# Undercurl
# set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0
# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

# Yazi

set -g allow-passthrough on

set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# -- navigation

## tmux.nvim>>>>>>>>>>>>>>>
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'

bind-key -T copy-mode-vi M-h resize-pane -L 1
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 1

bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi Y send-keys -X copy-end-of-line
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
## <<<<<<<<<<<<<<<<<<<

## window management
bind -n M-o new-window -c "#{pane_current_path}"
bind -n M-O break-pane

## -- theme
# set-option -g status-left '[#(whoami)]'           # 状态栏左方的内容
# set-option -g status-right '[#(date +" %m-%d %H:%M ")]'     # 状态栏右方的内容；这里的设置将得到类似23:59的显示
set-option -g status-position top
#set -g status off

# panes
#setw -g pane-border-status bottom
setw -g pane-border-format '#[bold]#{?#{&&:#{pane_active},#{client_prefix}},#[underscore],}\
#{?pane_active,❐ #S:#I/#{session_windows} ,}#{?window_zoomed_flag,⬢,❄} #P ⇒ #{pane_tty} #{pane_current_command}'
#set -g pane-active-border-style fg=brightblue
#set -g pane-border-style fg=magenta

# windows
set -g status-justify 'centre'
set -g status-left-length 90
set -g status-right-length 140
setw -g window-status-separator ''

# default statusbar colors
set -g status-bg black
set -g status-left ' #[fg=magenta,bold]❐ #S'
# set -g status-right '#[fg=brightyellow] #{?client_prefix,⌨ ,  }  #[fg=magenta,bold] %Y-%m-%d %H:%M '
# set -g status-right "#[fg=magenta,bold] %Y-%m-%d %H:%M | #[fg=brightblue]#(curl icanhazip.com) #(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #(ifconfig en3 | grep 'inet ' | awk '{print \"en3 \" $2}') #(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}')"
set -g status-right "#[fg=brightblue]#(curl icanhazip.com) #(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #(ifconfig en3 | grep 'inet ' | awk '{print \"en3 \" $2}') #(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}')"
setw -g window-status-format '#[fg=brightblue] #I #W '
setw -g window-status-current-format '#[fg=magenta,bold] #I #W:#F'
setw -g window-status-activity-style bg=black
setw -g window-status-bell-style bg=black
#set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"

# example: 
# create session
# bind C-c new-session
#
# # window management
# bind -n M-o new-window -c "#{pane_current_path}"
# bind -n M-O break-pane
# bind -n M-Q kill-pane
#
# # window navigation
# unbind n
# unbind p
# unbind 1
# unbind 2
# unbind 3
# unbind 4
# unbind 5
# unbind 6
# unbind 7
# unbind 8
# unbind 9
# unbind 0
# bind -r C-p previous-window
# bind -r C-n next-window
#
# bind -n M-1 select-window -t 1
# bind -n M-2 select-window -t 2
# bind -n M-3 select-window -t 3
# bind -n M-4 select-window -t 4
# bind -n M-5 select-window -t 5
# bind -n M-6 select-window -t 6
# bind -n M-7 select-window -t 7
# bind -n M-8 select-window -t 8
# bind -n M-9 select-window -t 9
#
#
# bind -n M-! join-pane -t :1
# bind -n M-@ join-pane -t :2
# bind -n 'M-#' join-pane -t :3
# bind -n 'M-$' join-pane -t :4
# bind -n M-% join-pane -t :5
# bind -n M-^ join-pane -t :6
# bind -n M-& join-pane -t :7
# bind -n M-* join-pane -t :8
# bind -n M-( join-pane -t :9
#
# bind u split-window -vb -c "#{pane_current_path}"
# bind e split-window -v -c "#{pane_current_path}"
# bind n split-window -hb -c "#{pane_current_path}"
# bind i split-window -h -c "#{pane_current_path}"
#
# bind -n M-f resize-pane -Z
#
# # pane navigation
# bind 1 select-pane -t:.1
# bind 2 select-pane -t:.2
# bind 3 select-pane -t:.3
# bind 4 select-pane -t:.4
# bind 5 select-pane -t:.5
# bind 6 select-pane -t:.6
# bind 7 select-pane -t:.7
# bind 8 select-pane -t:.8
# bind 9 select-pane -t:.9
# bind 0 select-pane -t:.10
# bind -n M-n select-pane -L
# bind -n M-e select-pane -D
# bind -n M-u select-pane -U
# bind -n M-i select-pane -R
# bind > swap-pane -D
# bind < swap-pane -U
# bind | swap-pane
# bind -n M-Space next-layout
#
# bind W choose-tree -Z
# bind S choose-tree 'move-pane -v -s "%%"'
# bind V choose-tree 'move-pane -h -s "%%"'
#
# # pane resizing
# bind -n M-N resize-pane -L 3
# bind -n M-E resize-pane -D 3
# bind -n M-U resize-pane -U 3
# bind -n M-I resize-pane -R 3
#
# set -g status-keys emacs
# set -g mode-keys vi
#
# bind -n M-v copy-mode
#
# bind -T copy-mode-vi v send-keys -X begin-selection
# bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
# bind -T copy-mode-vi n send-keys -X cursor-left
# bind -T copy-mode-vi i send-keys -X cursor-right
# bind -T copy-mode-vi u send-keys -X cursor-up
# bind -T copy-mode-vi e send-keys -X cursor-down
# bind -T copy-mode-vi h send-keys -X next-word-end
# bind -T copy-mode-vi U send-keys -N 5 -X cursor-up
# bind -T copy-mode-vi E send-keys -N 5 -X cursor-down
# bind -T copy-mode-vi N send-keys -X start-of-line
# bind -T copy-mode-vi I send-keys -X end-of-line
# bind -T copy-mode-vi Y send-keys -X copy-end-of-line
# bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
# bind -T copy-mode-vi = send-keys -X search-again
# bind -T copy-mode-vi = send-keys -X search-reverse
#
#
# bind b list-buffers
# bind p paste-buffer
#
# # -- toggle_syn_input
# bind C-g if-shell '[[ $(tmux showw synchronize-panes | cut -d\  -f2) == "on" ]]' \
# 'setw synchronize-panes off; set -g pane-border-style fg=magenta' \
# 'setw synchronize-panes on; set -g pane-border-style fg=red'
#
# # -- toggle_status
# bind s if-shell '[[ $(tmux show -g status | cut -d\  -f2) == "on" ]]' \
# 'set -g status off' \
# 'set -g status on'
#
# # -- theme
# #set -g status off
#
# # panes
# #setw -g pane-border-status bottom
# setw -g pane-border-format '#[bold]#{?#{&&:#{pane_active},#{client_prefix}},#[underscore],}\
# #{?pane_active,❐ #S:#I/#{session_windows} ,}#{?window_zoomed_flag,⬢,❄} #P ⇒ #{pane_tty} #{pane_current_command}'
# #set -g pane-active-border-style fg=brightblue
# #set -g pane-border-style fg=magenta
#
# # windows
# set -g status-justify 'centre'
# set -g status-left-length 90
# set -g status-right-length 140
# setw -g window-status-separator ''
#
# # default statusbar colors
# set -g status-bg black
# #set -g status-left ' #[fg=magenta,bold]❐ #S'
# #set -g status-left '#[fg=brightyellow] #{?client_prefix,⌨ ,  }  #[fg=magenta,bold] %Y-%m-%d %H:%M '
# #set -g status-right '#(rainbarf --battery --remaining --bolt --tmux --rgb)'
# #set -g status-left "#[fg=magenta,bold] %Y-%m-%d %H:%M | #[fg=brightblue]#(curl icanhazip.com) #(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #(ifconfig en3 | grep 'inet ' | awk '{print \"en3 \" $2}') #(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "
# setw -g window-status-format '#[fg=brightblue] #I #W '
# setw -g window-status-current-format '#[fg=magenta,bold] #I #W:#F'
# setw -g window-status-activity-style bg=black
# setw -g window-status-bell-style bg=black
# #set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"
#
#
# set-option -g status-left "#(~/.config/tmux/tmux-powerline/powerline.sh left)"
# set-option -g status-right "#(~/.config/tmux/tmux-powerline/powerline.sh right)"

# tqm>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

